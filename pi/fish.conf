set fish_greeting ""

alias cp "cp -i"
alias mv "mv -i"
alias rm "rm -i"

set -x GPG_TTY (tty)

fish_vi_key_bindings

function fish_mode_prompt
end

function fish_prompt -d "Write out the prompt"
    set -l last_status $status

    # GIT PROMPT SETUP DEFAULTS
    set -g __fish_git_prompt_show_informative_status 1
    set -g __fish_git_prompt_hide_untrackedfiles 1
    set -g __fish_git_prompt_color_branch cyan
    set -g __fish_git_prompt_showupstream "informative"
    set -g __fish_git_prompt_char_upstream_ahead "↑"
    set -g __fish_git_prompt_char_upstream_behind "↓"
    set -g __fish_git_prompt_char_upstream_prefix ""

    set -g __fish_git_prompt_char_stagedstate "●"
    set -g __fish_git_prompt_char_dirtystate "✚"
    set -g __fish_git_prompt_char_untrackedfiles "…"
    set -g __fish_git_prompt_char_invalidstate "✖"
    set -g __fish_git_prompt_char_cleanstate "✔"

    set -g __fish_git_prompt_color_dirtystate blue
    set -g __fish_git_prompt_color_stagedstate yellow
    set -g __fish_git_prompt_color_invalidstate red
    set -g __fish_git_prompt_color_untrackedfiles $fish_color_normal
    set -g __fish_git_prompt_color_cleanstate green --bold

    # User
    set_color yellow
    printf '%s' (whoami)
    set_color normal
    printf ' at '

    # Hostname
    set_color magenta
    echo -n (prompt_hostname)
    set_color normal
    printf ' in '

    # Working directory
    set_color $fish_color_cwd
    printf '%s' (prompt_pwd)
    set_color normal

    # VCS prompt
    set prompt_vcs (__fish_vcs_prompt | string trim -c ' ()')
    if test -n "$prompt_vcs"
        printf ' on %s' $prompt_vcs
    end

    # Error code
    if not test $last_status -eq 0
        echo -n " and "
        set_color red
        echo -n "$last_status"
        set_color normal
    end

    # Line 2
    echo

    # VI mode color
    switch $fish_bind_mode
      case default
        set_color --bold red
      case insert
        # set_color --bold green
        set_color normal
      case replace_one
        set_color --bold green
      case visual
        set_color --bold yellow
      case '*'
        set_color --bold red
    end
    printf '↪ '
    set_color normal
end
